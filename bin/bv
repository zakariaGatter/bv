#!/usr/bin/env bash

#set -x

#-------------#
# SCRIPT NAME #
#-------------#
name=${0##*/}
EDITOR=${EDITOR:-vim}

#-----------#
# ERROR MSG #
#-----------#
die(){ printf "%s: %b \n" "${name^}" "$@" ; exit 2 ;}

#----------------#
# SIMPLE MESSAGE #
#----------------#
msg(){ printf "%s: %b \n" "Rename" "$@" ;}

#----------#
# TMP FILE #
#----------#
TMP="/tmp/${name}.XXX"
:> "$TMP"

#-------------------------#
# RENAME ANYTHING ON FILE #
#-------------------------#
all(){
for i in ${!files[@]}; do
    file=$(realpath -s "${files[$i]}" 2> /dev/null)
    OLD[$i]=${file}

    printf "%s\n" "${file}" >> "$TMP"
done

eval "$BV_EDITOR $TMP"

[ -N "$TMP" ] || msg "the files stay's the same. Nothing to do"

[ "$(grep -vc -e "^$" $TMP)" -ne "${#files[@]}" ] && die "There is missing files. \nTry to run the command again"

local count=0
while read ; do
    [ "$REPLY" ] || continue

    [ "$REPLY" = "${OLD[$count]}" ] || {
        [ -d "${REPLY%/*}" ] || mkdir -p "${REPLY%/*}"
        $BV_MV -- "${OLD[$count]}" "${REPLY}"
        [ "$VERBOSE" ] && msg "'${OLD[$count]}' to '$REPLY'"
    }
    ((count++))
done < "$TMP"
}

#-----------------------#
# RENAME ONLY FILE NAME #
#-----------------------#
name(){
for i in ${!files[@]}; do
    OLD_PATH[$i]=${files[$i]%/*}
    OLD_NAME[$i]=${files[$i]##*/}
    file=${files[$i]##*/}

    printf "%s\n" "${file}" >> "$TMP"
done

eval "$BV_EDITOR $TMP"

[ -N "$TMP" ] || msg "the files stay's the same. Nothing to do"

[ "$(grep -vc -e "^$" $TMP)" -ne "${#files[@]}" ] && die "There is missing files. \nTry to run the command again"

local count=0
while read ; do
    [ "$REPLY" ] || continue

    [ "$REPLY" = "${OLD_NAME[$count]}" ] || {
        eval "$BV_MV -- ${OLD_PATH[$count]}/${OLD_NAME[$count]} ${OLD_PATH[$count]}/$REPLY"
        [ "$VERBOSE" ] && msg "'${OLD_NAME[$count]}' to '$REPLY'"
    }
    ((count++))
done < "$TMP"
}

#------------------#
# RENAME FILE PATH #
#------------------#
path(){
for i in ${!files[@]} ; do
    OLD_PATH[$i]=${files[$i]%/*}
    OLD_NAME[$i]=${files[$i]##*/}
    file=${files[$i]##*/}

    printf "[%s]: %s\n" "${OLD_NAME[$i]}" "${file}" >> "$TMP"
done

eval "$BV_EDITOR $TMP"

[ -N "$TMP" ] || msg "the files stay's the same. Nothing to do"

[ "$(grep -vc -e "^$" $TMP)" -ne "${#files[@]}" ] && die "There is missing files. \nTry to run the command again"

local count=0
while read ; do
    [ "$REPLY" ] || continue

    read name rest <<< "$REPLY"

    [ "$rest" = "${OLD_PATH[$count]}" ] || {
        [ -d "${rest}" ] || mkdir -p "${rest}"
        eval "$BV_MV -- ${OLD_PATH[$count]}/${OLD_NAME[$count]} ${rest}/${OLD_NAME[$count]}"
        [ "$VERBOSE" ] && msg "'${OLD_PATH[$count]}/${OLD_NAME[$count]}' to '$rest/${OLD_NAME[$count]}'"
    }
    ((count++))
done < "$TMP"
}

#-------------#
# HELP DIALOG #
#-------------#
help(){
while read ; do
    printf "%s\n" "$REPLY"
done <<-HELP
${name^^} bash rename Multi Files (VIFM, RANGER) style
USAGE: $name [OPTIONS] ... files ...

OPTIONS:
    -a : Rename anything on the file(s)
    -n : Rename file(s) name
    -r : Rename file(s) root directory
    -v : Explaine what being done
    -h : Show this help dialog
HELP
}

#---------------#
# MAIN FUNCTION #
#---------------#
main(){
while getopts ":anrvh" OPT ; do
    case "$OPT" in
        a )
            FILE=true
            ;;
        n )
            NAME=true
            ;;
        r )
            ROOT=true
            ;;
        v )
            VERBOSE=true
            ;;
        h )
            HELP=true
            ;;
        * )
            die "invalid option -- '${OPTARG}'\nTry '${name} -h' for more information."
            ;;
    esac
done

shift $(($OPTIND - 1))

# get list of files
while read line; do
    files+=( "$line" )
done < <(printf "%s\n" "$@")

}

#-------------------#
# RUN MAIN FUNCTION #
#-------------------#
main "$@"

#-----------------#
# SCRIPT VARIABLE #
#-----------------#
[ "$BV_EDITOR" ] || BV_EDITOR="$EDITOR"
[ "$BV_MV" ] || BV_MV="mv -f"

#------------#
# USER INPUT #
#------------#
[ "$HELP" ] && help
[ "$FILE" ] && all
[ "$ROOT" ] && root
[ "$NAME" ] && name
